{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Status.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nfunction Status({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  return session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": 100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60) // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }\n  })))));\n}\n\nexport default Status;","map":{"version":3,"sources":["C:/Users/TI/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Status.js"],"names":["React","secondsToDuration","minutesToDuration","Status","session","focusDuration","breakDuration","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAhB,EAA2D;AAG1D,SACCF,OAAO,iBACN,uDAEC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,OADF,aACEA,OADF,uBACEA,OAAO,CAAEG,KADX,UACsB,GADtB,EAEE,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,KAAT,MAAmB,UAAnB,GAAgCL,iBAAiB,CAACG,aAAD,CAAjD,GAAmEH,iBAAiB,CAACI,aAAD,CAFtF,EAEuG,GAFvG,YAFD,eAQC;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,iBAAiB,CAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEI,aAAV,CADnB,eARD,CADD,CAFD,eAgBC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,IAAI,EAAC,aAFN;AAGC,qBAAc,GAHf;AAIC,qBAAc,KAJf;AAKC,qBAAe,MAAO,MAAML,OAAO,CAACI,aAAf,IAAiCJ,OAAO,CAACG,KAAR,KAAkB,UAAlB,GAA+BF,aAAa,GAAG,EAA/C,GAAoDC,aAAa,GAAG,EAArG,CALtB,CAKgI;AALhI;AAMC,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAG,GAAE,MAAO,MAAMN,OAAO,CAACI,aAAf,IAAiCJ,OAAO,CAACG,KAAR,KAAkB,UAAlB,GAA+BF,aAAa,GAAG,EAA/C,GAAoDC,aAAa,GAAG,EAArG,CAAyG;AAA3H,KANR,CAMwI;AANxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD,CAhBD,CAFF;AAmCA;;AACD,eAAgBH,MAAhB","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\r\n\r\nfunction Status({ session, focusDuration, breakDuration }) {\r\n\r\n\r\n\treturn (\r\n\t\tsession && (\r\n\t\t\t<>\r\n\t\t\t\t{/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n\t\t\t\t<div className=\"row mb-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t{/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n\t\t\t\t\t\t<h2 data-testid=\"session-title\">\r\n\t\t\t\t\t\t\t{session?.label} for{\" \"}\r\n\t\t\t\t\t\t\t{session?.label === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration)}{\" \"}\r\n\t\t\t\t\t\t\tminutes\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t{/* TODO: Update message below correctly format the time remaining in the current session */}\r\n\t\t\t\t\t\t<p className=\"lead\" data-testid=\"session-sub-title\">\r\n\t\t\t\t\t\t\t{secondsToDuration(session?.timeRemaining)} remaining\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row mb-2\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<div className=\"progress\" style={{ height: \"20px\" }}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"progress-bar\"\r\n\t\t\t\t\t\t\t\trole=\"progressbar\"\r\n\t\t\t\t\t\t\t\taria-valuemin=\"0\"\r\n\t\t\t\t\t\t\t\taria-valuemax=\"100\"\r\n\t\t\t\t\t\t\t\taria-valuenow={100 - (100 * session.timeRemaining) / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)} // TODO: Increase aria-valuenow as elapsed time increases\r\n\t\t\t\t\t\t\t\tstyle={{ width: `${100 - (100 * session.timeRemaining) / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`}} // TODO: Increase width % as elapsed time increases\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t);\r\n}\r\nexport default  Status;"]},"metadata":{},"sourceType":"module"}