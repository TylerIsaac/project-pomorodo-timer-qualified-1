{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TI\\\\thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveSession.js\";\nimport React from \"react\";\n\nfunction Session({\n  session,\n  secondsToDuration,\n  focusDuration,\n  breakDuration\n}) {\n  if (session) {\n    let focus = null;\n\n    if (session.label.includes(\"Focusing\")) {\n      focus = focusDuration;\n    } else {\n      focus = breakDuration;\n    }\n\n    let currentValue = 0;\n    currentValue = 100 - session.timeRemaning / focus * 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 26\n      }\n    }, session.label, \" for \", secondsToDuration(focus), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 26\n      }\n    }, secondsToDuration(session.timeRemaning), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row-mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-vlauemax\": \"100\",\n      \"aria-valuenow\": currentValue.toString(),\n      style: {\n        width: currentValue.toString() + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }\n    })))));\n  } else {\n    return null;\n  }\n}\n\nexport default Session;","map":{"version":3,"sources":["C:/Users/TI/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveSession.js"],"names":["React","Session","session","secondsToDuration","focusDuration","breakDuration","focus","label","includes","currentValue","timeRemaning","height","toString","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA,aAA9B;AAA6CC,EAAAA;AAA7C,CAAlB,EAAgF;AAC5E,MAAIH,OAAJ,EAAa;AACT,QAAII,KAAK,GAAG,IAAZ;;AACC,QAAIJ,OAAO,CAACK,KAAR,CAAcC,QAAd,CAAuB,UAAvB,CAAJ,EAAwC;AACpCF,MAAAA,KAAK,GAAGF,aAAR;AACH,KAFD,MAEO;AACHE,MAAAA,KAAK,GAAGD,aAAR;AACH;;AAED,QAAII,YAAY,GAAG,CAAnB;AACAA,IAAAA,YAAY,GAAG,MAAQP,OAAO,CAACQ,YAAR,GAAsBJ,KAAvB,GAAgC,GAAtD;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,OAAO,CAACK,KADb,WACyBJ,iBAAiB,CAACG,KAAD,CAD1C,aADJ,eAII;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,iBAAiB,CAACD,OAAO,CAACQ,YAAT,CADtB,eAJJ,CADJ,CADJ,eAYI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACG,MAAA,SAAS,EAAC,cADb;AAEG,MAAA,IAAI,EAAC,aAFR;AAGG,uBAAc,GAHjB;AAIG,uBAAc,KAJjB;AAKG,uBAAeF,YAAY,CAACG,QAAb,EALlB;AAMG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEJ,YAAY,CAACG,QAAb,KAA0B;AAAnC,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAZJ,CADJ;AA6BJ,GAvCD,MAuCO;AACH,WAAO,IAAP;AACH;AACJ;;AAED,eAAeX,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction Session ({ session, secondsToDuration, focusDuration, breakDuration }) {\r\n    if (session) {\r\n        let focus = null;\r\n         if (session.label.includes(\"Focusing\")) {\r\n             focus = focusDuration;\r\n         } else {\r\n             focus = breakDuration;\r\n         }\r\n\r\n         let currentValue = 0;\r\n         currentValue = 100 - ((session.timeRemaning/ focus) * 100);\r\n         return (\r\n             <div>\r\n                 <div className=\"row mb-2\">\r\n                     <div className=\"col\">\r\n                         <h2 data-testid=\"session-title\">\r\n                             {session.label} for {secondsToDuration(focus)} minutes\r\n                         </h2>\r\n                         <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                             {secondsToDuration(session.timeRemaning)} remaining\r\n                         </p>\r\n                     </div>\r\n                 </div>\r\n                 \r\n                 <div className=\"row-mb-2\">\r\n                     <div className=\"col\">\r\n                         <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                             <div\r\n                                className=\"progress-bar\"\r\n                                role=\"progressbar\"\r\n                                aria-valuemin=\"0\"\r\n                                aria-vlauemax=\"100\"\r\n                                aria-valuenow={currentValue.toString()}\r\n                                style={{ width: currentValue.toString() + \"%\"}}>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n         )\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Session;"]},"metadata":{},"sourceType":"module"}